{"version":3,"sources":["components/HomeButton.js","components/register/RegisterForm.js","containers/Register.js","components/login/LoginButton.js"],"names":["HomeButton","to","className","style","marginLeft","type","RegisterForm","successful","onSubmit","errors","register","handleSubmit","message","reset","htmlFor","id","defaultValue","name","fullName","username","email","password","confirmPassword","acceptTerms","onClick","marginTop","role","Register","useState","setSuccessful","useSelector","state","dispatch","useDispatch","validationSchema","Yup","shape","required","min","max","oneOf","useForm","resolver","yupResolver","formState","LoginButton","data","Array","from","length","allActions","auth","then","catch"],"mappings":"0GAAA,wBAaeA,IAVI,kBACjB,cAAC,IAAD,CAAMC,GAAG,QAAT,SACE,qBAAKC,UAAU,aAAaC,MAAO,CAAEC,WAAY,QAAjD,SACE,wBAAQC,KAAK,SAASH,UAAU,0BAAhC,wB,0GCwHSI,EA1HM,SAAC,GAAD,gBACnBC,EADmB,EACnBA,WACAC,EAFmB,EAEnBA,SACAC,EAHmB,EAGnBA,OACAC,EAJmB,EAInBA,SACAC,EALmB,EAKnBA,aACAC,EANmB,EAMnBA,QACAC,EAPmB,EAOnBA,MAPmB,OASnB,sBAAKX,UAAU,OAAf,UACE,uBAAOY,QAAQ,SAAf,SACE,4CAEF,qBAAKC,GAAG,SAASb,UAAU,gBAA3B,SACE,uBAAMa,GAAG,SAASP,SAAUG,EAAaH,GAAzC,UACE,sBAAKN,UAAU,aAAf,UACE,uBAAOY,QAAQ,WAAf,uBACA,+CACEE,aAAa,GACbC,KAAK,WACLZ,KAAK,QACDK,EAAS,aAJf,IAKER,UAAS,uBAAkBO,EAAOS,SAAW,aAAe,OAE9D,qBAAKhB,UAAU,mBAAf,mBAAmCO,EAAOS,gBAA1C,aAAmC,EAAiBN,aAEtD,sBAAKV,UAAU,aAAf,UACE,uBAAOY,QAAQ,WAAf,sBACA,+CACEE,aAAa,GACbC,KAAK,WACLZ,KAAK,QACDK,EAAS,aAJf,IAKER,UAAS,uBAAkBO,EAAOU,SAAW,aAAe,OAE9D,qBAAKjB,UAAU,mBAAf,mBAAmCO,EAAOU,gBAA1C,aAAmC,EAAiBP,aAGtD,sBAAKV,UAAU,aAAf,UACE,uBAAOY,QAAQ,WAAf,mBACA,+CACEE,aAAa,GACbC,KAAK,QACLZ,KAAK,SACDK,EAAS,UAJf,IAKER,UAAS,uBAAkBO,EAAOW,MAAQ,aAAe,OAE3D,qBAAKlB,UAAU,mBAAf,mBAAmCO,EAAOW,aAA1C,aAAmC,EAAcR,aAGnD,sBAAKV,UAAU,aAAf,UACE,uBAAOY,QAAQ,WAAf,sBACA,+CACEE,aAAa,GACbC,KAAK,WACLZ,KAAK,YACDK,EAAS,aAJf,IAKER,UAAS,uBAAkBO,EAAOY,SAAW,aAAe,OAE9D,qBAAKnB,UAAU,mBAAf,mBAAmCO,EAAOY,gBAA1C,aAAmC,EAAiBT,aAGtD,sBAAKV,UAAU,aAAf,UACE,uBAAOY,QAAQ,WAAf,8BACA,+CACEE,aAAa,GACbC,KAAK,kBACLZ,KAAK,YACDK,EAAS,oBAJf,IAKER,UAAS,uBACPO,EAAOa,gBAAkB,aAAe,OAG5C,qBAAKpB,UAAU,mBAAf,mBACGO,EAAOa,uBADV,aACG,EAAwBV,aAI7B,sBAAKV,UAAU,wBAAf,UACE,+CACEe,KAAK,cACLZ,KAAK,YACDK,EAAS,gBAHf,IAIER,UAAS,2BACPO,EAAOc,YAAc,aAAe,OAGxC,uBAAOT,QAAQ,cAAcZ,UAAU,mBAAvC,gDAGA,qBAAKA,UAAU,mBAAf,mBAAmCO,EAAOc,mBAA1C,aAAmC,EAAoBX,aAGzD,sBAAKV,UAAU,aAAf,UACE,wBAAQG,KAAK,SAASH,UAAU,4BAAhC,SACE,8CAEF,wBACEG,KAAK,SACLmB,QAAS,kBAAMX,KACfX,UAAU,8BACVC,MAAO,CAAEsB,UAAW,QAJtB,SAME,8CAGHb,GACC,qBAAKV,UAAU,aAAf,SACE,qBACEA,UACEK,EAAa,sBAAwB,qBAEvCmB,KAAK,QAJP,SAMGd,e,yBCjDAe,UA3DE,WAAO,IAAD,EACeC,oBAAS,GADxB,mBACdrB,EADc,KACFsB,EADE,KAEbjB,EAAYkB,aAAY,SAACC,GAAD,OAAWA,EAAMnB,WAAzCA,QACFoB,EAAWC,cAEXC,EAAmBC,MAAaC,MAAM,CAC1ClB,SAAUiB,MAAaE,SAAS,wBAChClB,SAAUgB,MACPE,SAAS,wBACTC,IAAI,EAAG,0CACPC,IAAI,GAAI,0CACXnB,MAAOe,MAAaE,SAAS,qBAAqBjB,MAAM,oBACxDC,SAAUc,MACPE,SAAS,wBACTC,IAAI,EAAG,0CACPC,IAAI,GAAI,0CACXjB,gBAAiBa,MACdE,SAAS,gCACTG,MAAM,CAACL,IAAQ,YAAa,MAAO,mCACtCZ,YAAaY,MAAWK,MAAM,EAAC,GAAO,8BAnBnB,EA0BjBC,YAAQ,CACVC,SAAUC,YAAYT,KALtBxB,EAtBmB,EAsBnBA,SACAC,EAvBmB,EAuBnBA,aACAE,EAxBmB,EAwBnBA,MACaJ,EAzBM,EAyBnBmC,UAAanC,OAgBf,OACE,qCACE,sBAAKP,UAAU,iBAAf,UACE,cAAC2C,EAAA,EAAD,IACA,cAAC7C,EAAA,EAAD,OAEF,cAAC,EAAD,CACEO,WAAYA,EACZK,QAASA,EACTJ,SApBW,SAACsC,GACkB,IAA9BC,MAAMC,KAAKvC,GAAQwC,QACrBjB,EAASkB,IAAWC,KAAKzC,SAASoC,IAC/BM,MAAK,WACJvB,GAAc,MAEfwB,OAAM,WACLxB,GAAc,OAchBpB,OAAQA,EACRC,SAAUA,EACVC,aAAcA,EACdE,MAAOA,S,gCChEf,wBAaegC,IAVK,kBAClB,cAAC,IAAD,CAAM5C,GAAG,SAAT,SACE,qBAAKC,UAAU,aAAaC,MAAO,CAAEC,WAAY,QAAjD,SACE,wBAAQC,KAAK,SAASH,UAAU,0BAAhC","file":"static/js/4.f1906f38.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst HomeButton = () => (\n  <Link to=\"/home\">\n    <div className=\"form-group\" style={{ marginLeft: '1rem' }}>\n      <button type=\"button\" className=\"btn btn-outline-primary\">\n        Home\n      </button>\n    </div>\n  </Link>\n);\n\nexport default HomeButton;\n","/* eslint-disable react/prop-types */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\n\nconst RegisterForm = ({\n  successful,\n  onSubmit,\n  errors,\n  register,\n  handleSubmit,\n  message,\n  reset,\n}) => (\n  <div className=\"form\">\n    <label htmlFor=\"signup\">\n      <h4>Register</h4>\n    </label>\n    <div id=\"signup\" className=\"register-form\">\n      <form id=\"signup\" onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"form-group\">\n          <label htmlFor=\"fullName\">Full Name</label>\n          <input\n            defaultValue=\"\"\n            name=\"fullName\"\n            type=\"text\"\n            {...register('fullName')}\n            className={`form-control ${errors.fullName ? 'is-invalid' : ''}`}\n          />\n          <div className=\"invalid-feedback\">{errors.fullName?.message}</div>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"username\">Username</label>\n          <input\n            defaultValue=\"\"\n            name=\"username\"\n            type=\"text\"\n            {...register('username')}\n            className={`form-control ${errors.username ? 'is-invalid' : ''}`}\n          />\n          <div className=\"invalid-feedback\">{errors.username?.message}</div>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"username\">Email</label>\n          <input\n            defaultValue=\"\"\n            name=\"email\"\n            type=\"email\"\n            {...register('email')}\n            className={`form-control ${errors.email ? 'is-invalid' : ''}`}\n          />\n          <div className=\"invalid-feedback\">{errors.email?.message}</div>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"username\">Password</label>\n          <input\n            defaultValue=\"\"\n            name=\"password\"\n            type=\"password\"\n            {...register('password')}\n            className={`form-control ${errors.password ? 'is-invalid' : ''}`}\n          />\n          <div className=\"invalid-feedback\">{errors.password?.message}</div>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"username\">Confirm Password</label>\n          <input\n            defaultValue=\"\"\n            name=\"confirmPassword\"\n            type=\"password\"\n            {...register('confirmPassword')}\n            className={`form-control ${\n              errors.confirmPassword ? 'is-invalid' : ''\n            }`}\n          />\n          <div className=\"invalid-feedback\">\n            {errors.confirmPassword?.message}\n          </div>\n        </div>\n\n        <div className=\"form-group form-check\">\n          <input\n            name=\"acceptTerms\"\n            type=\"checkbox\"\n            {...register('acceptTerms')}\n            className={`form-check-input ${\n              errors.acceptTerms ? 'is-invalid' : ''\n            }`}\n          />\n          <label htmlFor=\"acceptTerms\" className=\"form-check-label\">\n            I have read and agree to the Terms\n          </label>\n          <div className=\"invalid-feedback\">{errors.acceptTerms?.message}</div>\n        </div>\n\n        <div className=\"form-group\">\n          <button type=\"submit\" className=\"btn btn-primary btn-block\">\n            <span>Register</span>\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => reset()}\n            className=\"btn btn-warning float-right\"\n            style={{ marginTop: '2rem' }}\n          >\n            <span>Reset</span>\n          </button>\n        </div>\n        {message && (\n          <div className=\"form-group\">\n            <div\n              className={\n                successful ? 'alert alert-success' : 'alert alert-danger'\n              }\n              role=\"alert\"\n            >\n              {message}\n            </div>\n          </div>\n        )}\n      </form>\n    </div>\n  </div>\n);\nexport default RegisterForm;\n","import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport RegisterForm from '../components/register/RegisterForm';\nimport allActions from '../redux/actions';\nimport LoginButton from '../components/login/LoginButton';\nimport HomeButton from '../components/HomeButton';\n\nconst Register = () => {\n  const [successful, setSuccessful] = useState(false);\n  const { message } = useSelector((state) => state.message);\n  const dispatch = useDispatch();\n\n  const validationSchema = Yup.object().shape({\n    fullName: Yup.string().required('Fullname is required'),\n    username: Yup.string()\n      .required('Username is required')\n      .min(6, 'Username must be at least 6 characters')\n      .max(20, 'Username must not exceed 20 characters'),\n    email: Yup.string().required('Email is required').email('Email is invalid'),\n    password: Yup.string()\n      .required('Password is required')\n      .min(6, 'Password must be at least 6 characters')\n      .max(40, 'Password must not exceed 40 characters'),\n    confirmPassword: Yup.string()\n      .required('Confirm Password is required')\n      .oneOf([Yup.ref('password'), null], 'Confirm Password does not match'),\n    acceptTerms: Yup.bool().oneOf([true], 'Accept Terms is required'),\n  });\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(validationSchema),\n  });\n\n  const onSubmit = (data) => {\n    if (Array.from(errors).length === 0) {\n      dispatch(allActions.auth.register(data))\n        .then(() => {\n          setSuccessful(true);\n        })\n        .catch(() => {\n          setSuccessful(false);\n        });\n    }\n  };\n  return (\n    <>\n      <div className=\"button-wrapper\">\n        <LoginButton />\n        <HomeButton />\n      </div>\n      <RegisterForm\n        successful={successful}\n        message={message}\n        onSubmit={onSubmit}\n        errors={errors}\n        register={register}\n        handleSubmit={handleSubmit}\n        reset={reset}\n      />\n    </>\n  );\n};\nexport default Register;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst LoginButton = () => (\n  <Link to=\"/login\">\n    <div className=\"form-group\" style={{ marginLeft: '1rem' }}>\n      <button type=\"button\" className=\"btn btn-outline-primary\">\n        Log in\n      </button>\n    </div>\n  </Link>\n);\n\nexport default LoginButton;\n"],"sourceRoot":""}