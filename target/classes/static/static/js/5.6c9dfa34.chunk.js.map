{"version":3,"sources":["components/HomeButton.js","components/login/LoginForm.js","containers/Login.js","components/register/RegisterButton.js"],"names":["HomeButton","to","className","style","marginLeft","type","LoginForm","message","isLoading","onSubmit","errors","register","handleSubmit","htmlFor","id","defaultValue","name","username","password","disabled","role","Login","props","useState","setIsLoading","useSelector","state","isAuth","auth","dispatch","useDispatch","validationSchema","Yup","shape","required","useForm","resolver","yupResolver","reset","formState","RegisterButton","data","Array","from","length","allActions","login","then","history","push","catch"],"mappings":"0GAAA,wBAaeA,IAVI,kBACjB,cAAC,IAAD,CAAMC,GAAG,QAAT,SACE,qBAAKC,UAAU,aAAaC,MAAO,CAAEC,WAAY,QAAjD,SACE,wBAAQC,KAAK,SAASH,UAAU,0BAAhC,wB,iHC0DSI,EA5DG,SAAC,GAAD,QAChBC,EADgB,EAChBA,QACAC,EAFgB,EAEhBA,UACAC,EAHgB,EAGhBA,SACAC,EAJgB,EAIhBA,OACAC,EALgB,EAKhBA,SACAC,EANgB,EAMhBA,aANgB,OAQhB,sBAAKV,UAAU,OAAf,UACE,uBAAOW,QAAQ,QAAf,SACE,0CAEF,qBAAKC,GAAG,QAAQZ,UAAU,gBAA1B,SACE,uBAAMY,GAAG,QAAQL,SAAUG,EAAaH,GAAxC,UACE,sBAAKP,UAAU,aAAf,UACE,uBAAOW,QAAQ,WAAf,sBACA,+CACEE,aAAa,GACbC,KAAK,WACLX,KAAK,QACDM,EAAS,aAJf,IAKET,UAAS,uBAAkBQ,EAAOO,SAAW,aAAe,OAE9D,qBAAKf,UAAU,mBAAf,mBAAmCQ,EAAOO,gBAA1C,aAAmC,EAAiBV,aAGtD,sBAAKL,UAAU,aAAf,UACE,uBAAOW,QAAQ,WAAf,sBACA,+CACEE,aAAa,GACbC,KAAK,WACLX,KAAK,YACDM,EAAS,aAJf,IAKET,UAAS,uBAAkBQ,EAAOQ,SAAW,aAAe,OAE9D,qBAAKhB,UAAU,mBAAf,mBAAmCQ,EAAOQ,gBAA1C,aAAmC,EAAiBX,aAGtD,qBAAKL,UAAU,aAAf,SACE,yBACEG,KAAK,SACLH,UAAU,4BACViB,SAAUX,EAHZ,UAKGA,GAAa,sBAAMN,UAAU,qCAC9B,8CAGHK,GACC,qBAAKL,UAAU,aAAf,SACE,qBAAKA,UAAU,qBAAqBkB,KAAK,QAAzC,SACGb,e,yBCgBAc,UA3DD,SAACC,GAAW,IAAD,EACWC,oBAAS,GADpB,mBAChBf,EADgB,KACLgB,EADK,KAEfjB,EAAYkB,aAAY,SAACC,GAAD,OAAWA,EAAMnB,WAAzCA,QACAoB,EAAWF,aAAY,SAACC,GAAD,OAAWA,EAAME,QAAxCD,OACFE,EAAWC,cAEXC,EAAmBC,MAAaC,MAAM,CAC1ChB,SAAUe,MAAaE,SAAS,wBAEhChB,SAAUc,MAAaE,SAAS,0BATX,EAgBnBC,YAAQ,CACVC,SAAUC,YAAYN,KALtBpB,EAZqB,EAYrBA,SACAC,EAbqB,EAarBA,aACA0B,EAdqB,EAcrBA,MACa5B,EAfQ,EAerB6B,UAAa7B,OAyBf,OAJIiB,GACD,IAID,qCACE,sBAAKzB,UAAU,iBAAf,UACE,cAACF,EAAA,EAAD,IACA,cAACwC,EAAA,EAAD,OAEF,cAAC,EAAD,CACEhC,UAAWA,EACXD,QAASA,EACTE,SA7BW,SAACgC,GAChBjB,GAAa,GACqB,IAA9BkB,MAAMC,KAAKjC,GAAQkC,OACrBf,EAASgB,IAAWjB,KAAKkB,MAAML,IAC5BM,MAAK,WACJzB,EAAM0B,QAAQC,KAAK,iBAGpBC,OAAM,WACL1B,GAAa,MAGjBA,GAAa,IAkBXd,OAAQA,EACRC,SAAUA,EACVC,aAAcA,EACd0B,MAAOA,S,gCCjEf,wBAaeE,IAVQ,kBACrB,cAAC,IAAD,CAAMvC,GAAG,YAAT,SACE,qBAAKC,UAAU,aAAf,SACE,wBAAQG,KAAK,SAASH,UAAU,kBAAhC","file":"static/js/5.6c9dfa34.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst HomeButton = () => (\n  <Link to=\"/home\">\n    <div className=\"form-group\" style={{ marginLeft: '1rem' }}>\n      <button type=\"button\" className=\"btn btn-outline-primary\">\n        Home\n      </button>\n    </div>\n  </Link>\n);\n\nexport default HomeButton;\n","/* eslint-disable react/prop-types */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\n\nconst LoginForm = ({\n  message,\n  isLoading,\n  onSubmit,\n  errors,\n  register,\n  handleSubmit,\n}) => (\n  <div className=\"form\">\n    <label htmlFor=\"login\">\n      <h4>Log in</h4>\n    </label>\n    <div id=\"login\" className=\"register-form\">\n      <form id=\"login\" onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"form-group\">\n          <label htmlFor=\"username\">Username</label>\n          <input\n            defaultValue=\"\"\n            name=\"username\"\n            type=\"text\"\n            {...register('username')}\n            className={`form-control ${errors.username ? 'is-invalid' : ''}`}\n          />\n          <div className=\"invalid-feedback\">{errors.username?.message}</div>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Password</label>\n          <input\n            defaultValue=\"\"\n            name=\"password\"\n            type=\"password\"\n            {...register('password')}\n            className={`form-control ${errors.password ? 'is-invalid' : ''}`}\n          />\n          <div className=\"invalid-feedback\">{errors.password?.message}</div>\n        </div>\n\n        <div className=\"form-group\">\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary btn-block\"\n            disabled={isLoading}\n          >\n            {isLoading && <span className=\"spinner-border spinner-border-sm\" />}\n            <span>Login</span>\n          </button>\n        </div>\n        {message && (\n          <div className=\"form-group\">\n            <div className=\"alert alert-danger\" role=\"alert\">\n              {message}\n            </div>\n          </div>\n        )}\n      </form>\n    </div>\n  </div>\n);\n\nexport default LoginForm;\n","/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Redirect } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport LoginForm from '../components/login/LoginForm';\nimport allActions from '../redux/actions';\nimport HomeButton from '../components/HomeButton';\nimport RegisterButton from '../components/register/RegisterButton';\n\nconst Login = (props) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const { message } = useSelector((state) => state.message);\n  const { isAuth } = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required('Username is required'),\n\n    password: Yup.string().required('Password is required'),\n  });\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(validationSchema),\n  });\n\n  const onSubmit = (data) => {\n    setIsLoading(true);\n    if (Array.from(errors).length === 0) {\n      dispatch(allActions.auth.login(data))\n        .then(() => {\n          props.history.push('/dashboard');\n          // window.location.reload();\n        })\n        .catch(() => {\n          setIsLoading(false);\n        });\n    } else {\n      setIsLoading(false);\n    }\n  };\n\n  if (isAuth) {\n    <Redirect to=\"/dashboard\" />;\n  }\n\n  return (\n    <>\n      <div className=\"button-wrapper\">\n        <HomeButton />\n        <RegisterButton />\n      </div>\n      <LoginForm\n        isLoading={isLoading}\n        message={message}\n        onSubmit={onSubmit}\n        errors={errors}\n        register={register}\n        handleSubmit={handleSubmit}\n        reset={reset}\n      />\n    </>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst RegisterButton = () => (\n  <Link to=\"/register\">\n    <div className=\"form-group\">\n      <button type=\"button\" className=\"btn btn-primary\">\n        Register\n      </button>\n    </div>\n  </Link>\n);\n\nexport default RegisterButton;\n"],"sourceRoot":""}