{"version":3,"sources":["redux/actions/types.js","redux/reducers/auth.js","redux/reducers/message.js","redux/reducers/user.js","redux/reducers/index.js","redux/store.js","helpers/history.js","routes/ProtectedRoute.js","components/register/RegisterForm.js","service/auth-service.js","service/auth-header.js","service/user-service.js","redux/actions/auth.js","redux/actions/index.js","redux/actions/message.js","redux/actions/user.js","components/login/LoginButton.js","components/HomeButton.js","containers/Register.js","components/layout/Sidebar.js","components/layout/Content.js","components/layout/Footer.js","components/LogoutButton.js","components/UserInfoHeader.js","components/layout/Header.js","components/layout/Body.js","containers/Dashboard.js","components/login/LoginForm.js","components/register/RegisterButton.js","containers/Login.js","containers/Home.js","routes/Routes.js","App.js","index.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","SET_MESSAGE","CLEAR_MESSAGE","SET_USER_DETAILS","user","JSON","parse","localStorage","getItem","initialState","isAuth","auth","state","action","console","log","stringify","type","payload","message","fullname","username","email","data","combineReducers","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","history","createBrowserHistory","withRouter","Component","component","rest","useSelector","render","props","to","pathname","from","location","RegisterForm","onSubmit","errors","register","handleSubmit","className","htmlFor","id","defaultValue","name","password","confirmPassword","acceptTerms","onClick","document","getElementById","reset","API_URL","AuthService","axios","post","login","credentials","params","URLSearchParams","append","headers","logout","removeItem","authHeader","tokens","access_token","Authorization","UserService","getPublicContent","get","getUserContent","config","Accept","getAdminContent","loginAction","dispatch","then","response","jwt_decode","setItem","error","toString","Promise","resolve","allActions","registerAction","logoutAction","setMessage","clearMessage","userDetails","LoginButton","style","marginLeft","HomeButton","Register","useDispatch","useHistory","validationSchema","Yup","shape","required","min","max","oneOf","useForm","resolver","yupResolver","formState","useEffect","push","res","Sidebar","Content","Footer","Logout","marginRight","UserInfoHeader","useState","userInfo","setUserInfo","padding","Header","Body","LoginForm","RegisterButton","Login","Home","left","right","LogoutButton","Routes","exact","path","Dashboard","App","listen","ReactDOM","querySelector"],"mappings":"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","file":"static/js/main.51412c32.chunk.js","sourcesContent":["export const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT = 'LOGOUT';\n\nexport const REDIRECT = 'REDIRECT';\n\nexport const SET_MESSAGE = 'SET_MESSAGE';\nexport const CLEAR_MESSAGE = 'CLEAR_MESSAGE';\n\nexport const SET_USER_DETAILS = 'SET_USER_DETAILS';\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n} from '../actions/types';\n\nconst user = JSON.parse(localStorage.getItem('user'));\n\nconst initialState = user\n  ? { isAuth: true, user }\n  : { isAuth: false, user: null };\n\nconst auth = (state = initialState, action) => {\n  console.log(\n    `%c Current action: %c${JSON.stringify(action.type)} `,\n    'font-size: 12px; color: black; background: lightGrey;',\n    'font-size: 12px; color: DarkGreen; background: lightGrey;'\n  );\n  const { type, payload } = action;\n  switch (type) {\n    case REGISTER_SUCCESS:\n      return {\n        ...state,\n        isAuth: false,\n      };\n    case REGISTER_FAIL:\n      return {\n        ...state,\n        isAuth: false,\n      };\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        isAuth: true,\n        user: payload,\n      };\n    case LOGIN_FAIL:\n      return {\n        ...state,\n        isAuth: false,\n        user: null,\n      };\n    case LOGOUT:\n      return {\n        ...state,\n        isAuth: false,\n        user: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default auth;\n","import { SET_MESSAGE, CLEAR_MESSAGE } from '../actions/types';\n\nconst initialState = {};\n\nconst message = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_MESSAGE:\n      return { message: payload };\n\n    case CLEAR_MESSAGE:\n      return { message: '' };\n\n    default:\n      return state;\n  }\n};\n\nexport default message;\n","import { SET_USER_DETAILS, LOGOUT } from '../actions/types';\n\nconst initialState = {\n  fullname: '',\n  username: '',\n  email: '',\n  data: false,\n};\n\nconst user = (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case SET_USER_DETAILS:\n      return {\n        ...state,\n        fullname: payload.fullname,\n        username: payload.username,\n        email: payload.email,\n        data: true,\n      };\n    case LOGOUT:\n      return {\n        state: initialState,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default user;\n","import { combineReducers } from 'redux';\nimport auth from './auth';\nimport message from './message';\nimport user from './user';\n\nexport default combineReducers({\n  auth,\n  message,\n  user,\n});\n","/* eslint-disable import/no-extraneous-dependencies */\n/* eslint-disable no-underscore-dangle */\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport default store;\n","/* eslint-disable import/no-extraneous-dependencies */\nimport { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default history;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { Route, Redirect, withRouter } from 'react-router-dom';\n\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\n  console.log(\n    `%c === Private route === `,\n    'font-size: 12px; color: black; background: lightGrey;'\n  );\n  const { isAuth } = useSelector((state) => state.auth);\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (isAuth) {\n          return <Component {...props} />;\n        }\n        return (\n          <Redirect\n            // eslint-disable-next-line react/prop-types\n            to={{ pathname: '/', state: { from: props.history.location } }}\n          />\n        );\n      }}\n    />\n  );\n};\n\nProtectedRoute.propTypes = {\n  component: PropTypes.func.isRequired,\n};\n\nexport default withRouter(ProtectedRoute);\n","/* eslint-disable react/prop-types */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\n\nconst RegisterForm = ({ onSubmit, errors, register, handleSubmit }) => (\n  <div className=\"form\">\n    <label htmlFor=\"register-form\">\n      <h4>Register</h4>\n    </label>\n    <div className=\"register-form\">\n      <form id=\"register\" onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"form-group\">\n          <label htmlFor=\"fullname\">Full Name</label>\n          <input\n            defaultValue=\"\"\n            name=\"fullname\"\n            type=\"text\"\n            {...register('fullname')}\n            className={`form-control ${errors.fullname ? 'is-invalid' : ''}`}\n          />\n          <div className=\"invalid-feedback\">{errors.fullname?.message}</div>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"username\">Username</label>\n          <input\n            defaultValue=\"\"\n            name=\"username\"\n            type=\"text\"\n            {...register('username')}\n            className={`form-control ${errors.username ? 'is-invalid' : ''}`}\n          />\n          <div className=\"invalid-feedback\">{errors.username?.message}</div>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"username\">Email</label>\n          <input\n            defaultValue=\"\"\n            name=\"email\"\n            type=\"text\"\n            {...register('email')}\n            className={`form-control ${errors.email ? 'is-invalid' : ''}`}\n          />\n          <div className=\"invalid-feedback\">{errors.email?.message}</div>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"username\">Password</label>\n          <input\n            defaultValue=\"\"\n            name=\"password\"\n            type=\"password\"\n            {...register('password')}\n            className={`form-control ${errors.password ? 'is-invalid' : ''}`}\n          />\n          <div className=\"invalid-feedback\">{errors.password?.message}</div>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"username\">Confirm Password</label>\n          <input\n            defaultValue=\"\"\n            name=\"confirmPassword\"\n            type=\"password\"\n            {...register('confirmPassword')}\n            className={`form-control ${\n              errors.confirmPassword ? 'is-invalid' : ''\n            }`}\n          />\n          <div className=\"invalid-feedback\">\n            {errors.confirmPassword?.message}\n          </div>\n        </div>\n\n        <div className=\"form-group form-check\">\n          <input\n            name=\"acceptTerms\"\n            type=\"checkbox\"\n            {...register('acceptTerms')}\n            className={`form-check-input ${\n              errors.acceptTerms ? 'is-invalid' : ''\n            }`}\n          />\n          <label htmlFor=\"acceptTerms\" className=\"form-check-label\">\n            I have read and agree to the Terms\n          </label>\n          <div className=\"invalid-feedback\">{errors.acceptTerms?.message}</div>\n        </div>\n\n        <div className=\"form-group\">\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Submit\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => document.getElementById('register').reset()}\n            className=\"btn btn-warning float-right\"\n          >\n            Reset\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n);\nexport default RegisterForm;\n","import axios from 'axios';\n\nconst API_URL = 'http://localhost:8080/';\n\nconst login = (credentials) => {\n  const params = new URLSearchParams();\n  params.append('username', credentials.username);\n  params.append('password', credentials.password);\n  const config = {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n    },\n  };\n  return axios.post(`${API_URL}api/login`, params, config);\n};\n\nconst register = (data) => axios.post(`${API_URL}api/register`, data);\n\nconst logout = () => {\n  console.log(\n    `%c ==='Logged Out'=== `,\n    'font-size: 12px; color: DarkGreen; background: lightGrey;'\n  );\n  localStorage.removeItem('user');\n  localStorage.removeItem('token');\n};\n\nconst AuthService = {\n  register,\n  login,\n  logout,\n};\n\nexport default AuthService;\n","const authHeader = () => {\n  const tokens = JSON.parse(localStorage.getItem('tokens'));\n  console.log(\n    `%c Auth header token: %c${tokens.access_token} `,\n    'font-size: 12px; color: black; background: lightGrey;',\n    'font-size: 12px; color: DarkGreen; background: lightGrey;'\n  );\n  if (tokens && tokens.access_token) {\n    return { Authorization: `Bearer ${JSON.stringify(tokens.access_token)}` };\n  }\n  return {};\n};\n\nexport default authHeader;\n","import axios from 'axios';\nimport authHeader from './auth-header';\n\nconst API_URL = 'http://localhost:8080/';\n\nconst getPublicContent = () => axios.get(`${API_URL}api/users`);\n\nconst getUserContent = () => {\n  const Authorization = authHeader();\n  const config = {\n    headers: {\n      Authorization,\n      'Content-Type': 'application/json',\n      Accept: '*/*',\n    },\n  };\n  return axios.get(`${API_URL}api/user/details`, config);\n};\nconst getAdminContent = () =>\n  axios.get(`${API_URL}api/admin`, { headers: authHeader() });\n\nconst UserService = {\n  getPublicContent,\n  getUserContent,\n  getAdminContent,\n};\nexport default UserService;\n","/* eslint-disable camelcase */\n// import { Redirect } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\nimport AuthService from '../../service/auth-service';\nimport UserService from '../../service/user-service';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  SET_MESSAGE,\n} from './types';\n\nconst { register, login, logout } = AuthService;\nconst { getUserContent } = UserService;\n\nconst loginAction = (credentials) => (dispatch) =>\n  login(credentials).then(\n    (response) => {\n      // console.log(\n      //   `%c Reducer log in response: %c ${JSON.stringify(response.data)} `,\n      //   'font-size: 12px; color: black; background: lightGrey;',\n      //   'font-size: 12px; color: DarkGreen; background: lightGrey;'\n      // );\n      const tokens = response.data;\n      const user = jwt_decode(tokens.access_token);\n      localStorage.setItem('tokens', JSON.stringify(tokens));\n      localStorage.setItem('user', JSON.stringify(user));\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: tokens,\n      });\n      return getUserContent(tokens.access_token);\n    },\n    (error) => {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n\n      dispatch({\n        type: LOGIN_FAIL,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      });\n\n      return Promise.resolve(message);\n    }\n  );\n\nconst registerAction = (data) => (dispatch) =>\n  register(data).then(\n    (response) => {\n      // console.log(\n      //   `%c Reducer register response: %c ${JSON.stringify(response.data)} `,\n      //   'font-size: 12px; color: black; background: lightGrey;',\n      //   'font-size: 12px; color: DarkGreen; background: lightGrey;'\n      // );\n      dispatch({\n        type: REGISTER_SUCCESS,\n      });\n      dispatch({\n        type: SET_MESSAGE,\n        payload: response.data.message,\n      });\n\n      return dispatch(\n        loginAction({\n          username: data.username,\n          password: data.password,\n        })\n      );\n    },\n    (error) => {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n\n      dispatch({\n        type: REGISTER_FAIL,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      });\n\n      return Promise.resolve(message);\n    }\n  );\n\nconst logoutAction = () => (dispatch) => {\n  logout();\n  dispatch({\n    type: LOGOUT,\n  });\n};\n\nconst auth = {\n  registerAction,\n  loginAction,\n  logoutAction,\n};\n\nexport default auth;\n","import auth from './auth';\nimport message from './message';\nimport user from './user';\n\nconst allActions = {\n  auth,\n  message,\n  user,\n};\n\nexport default allActions;\n","import { SET_MESSAGE, CLEAR_MESSAGE } from './types';\n\nconst setMessage = (message) => ({\n  type: SET_MESSAGE,\n  payload: message,\n});\n\nconst clearMessage = () => ({\n  type: CLEAR_MESSAGE,\n});\n\nconst messages = {\n  setMessage,\n  clearMessage,\n};\n\nexport default messages;\n","import { SET_USER_DETAILS } from './types';\n\nconst userDetails = (data) => ({\n  type: SET_USER_DETAILS,\n  payload: data,\n});\n\nconst user = {\n  userDetails,\n};\n\nexport default user;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst LoginButton = () => (\n  <Link to=\"/login\">\n    <div className=\"form-group\" style={{ marginLeft: '1rem' }}>\n      <button type=\"button\" className=\"btn btn-outline-primary\">\n        Log in\n      </button>\n    </div>\n  </Link>\n);\n\nexport default LoginButton;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst HomeButton = () => (\n  <Link to=\"/home\">\n    <div className=\"form-group\" style={{ marginLeft: '1rem' }}>\n      <button type=\"button\" className=\"btn btn-primary\">\n        Home\n      </button>\n    </div>\n  </Link>\n);\n\nexport default HomeButton;\n","import React, { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport RegisterForm from '../components/register/RegisterForm';\nimport allActions from '../redux/actions';\nimport LoginButton from '../components/login/LoginButton';\nimport HomeButton from '../components/HomeButton';\n\nconst Register = () => {\n  const { message } = useSelector((state) => state.message);\n  const { isAuth } = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const validationSchema = Yup.object().shape({\n    fullname: Yup.string().required('Fullname is required'),\n    username: Yup.string()\n      .required('Username is required')\n      .min(6, 'Username must be at least 6 characters')\n      .max(20, 'Username must not exceed 20 characters'),\n    email: Yup.string().required('Email is required').email('Email is invalid'),\n    password: Yup.string()\n      .required('Password is required')\n      .min(6, 'Password must be at least 6 characters')\n      .max(40, 'Password must not exceed 40 characters'),\n    confirmPassword: Yup.string()\n      .required('Confirm Password is required')\n      .oneOf([Yup.ref('password'), null], 'Confirm Password does not match'),\n    acceptTerms: Yup.bool().oneOf([true], 'Accept Terms is required'),\n  });\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(validationSchema),\n  });\n\n  const onSubmit = (data) => {\n    dispatch(allActions.auth.registerAction(data)).then((res) => {\n      dispatch(allActions.user.userDetails(res.data));\n      console.log(\n        `%c Submission response: %c${res} `,\n        'font-size: 12px; color: black; background: lightGrey;',\n        'font-size: 12px; color: DarkGreen; background: lightGrey;'\n      );\n    });\n  };\n\n  useEffect(() => {\n    if (isAuth) {\n      history.push('/dashboard');\n    }\n  }, [isAuth, history]);\n\n  return (\n    <>\n      <div className=\"button-wrapper\">\n        <LoginButton />\n        <HomeButton />\n      </div>\n      <RegisterForm\n        message={message}\n        onSubmit={onSubmit}\n        errors={errors}\n        register={register}\n        handleSubmit={handleSubmit}\n        reset={reset}\n      />\n    </>\n  );\n};\nexport default Register;\n","import React from 'react';\n\nconst Sidebar = () => <div className=\"sidebar\">Sidebar</div>;\n\nexport default Sidebar;\n","import React from 'react';\n\nconst Content = () => <div className=\"content\">Content</div>;\n\nexport default Content;\n","import React from 'react';\n\nconst Footer = () => <div className=\"footer\">caleb tracey 2021</div>;\n\nexport default Footer;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport allActions from '../redux/actions';\n\nconst Logout = () => {\n  const dispatch = useDispatch();\n  return (\n    <button\n      type=\"button\"\n      style={{ marginRight: '1rem' }}\n      className=\"btn btn-primary\"\n      onClick={() => dispatch(allActions.auth.logoutAction())}\n    >\n      Logout\n    </button>\n  );\n};\n\nexport default Logout;\n","/* eslint-disable camelcase */\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nconst UserInfoHeader = () => {\n  const [userInfo, setUserInfo] = useState(null);\n  const { isAuth } = useSelector((state) => state.auth);\n  const user = useSelector((state) => state.user);\n\n  useEffect(() => {\n    if (isAuth && user.data) {\n      setUserInfo(user.fullname);\n    }\n  }, [isAuth, user]);\n\n  return <div style={{ padding: '1rem' }}>{userInfo}</div>;\n};\n\nexport default UserInfoHeader;\n","import React from 'react';\nimport Logout from '../LogoutButton';\nimport UserInfoHeader from '../UserInfoHeader';\n\nconst Header = () => (\n  <div className=\"header\">\n    <div className=\"wrapper\">\n      <UserInfoHeader />\n      <Logout />\n    </div>\n  </div>\n);\n\nexport default Header;\n","import React from 'react';\nimport Content from './Content';\nimport Footer from './Footer';\nimport Header from './Header';\n\nconst Body = () => (\n  <div className=\"body\">\n    <Header />\n    <Content />\n    <Footer />\n  </div>\n);\n\nexport default Body;\n","import React, { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Sidebar from '../components/layout/Sidebar';\nimport Body from '../components/layout/Body';\nimport UserService from '../service/user-service';\nimport allActions from '../redux/actions';\n\nconst { getUserContent } = UserService;\n\nconst Dashboard = () => {\n  const { isAuth } = useSelector((state) => state.auth);\n  const { data } = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (isAuth && !data) {\n      getUserContent().then((res) => {\n        dispatch(allActions.user.userDetails(res.data));\n      });\n    }\n  }, [isAuth, data, dispatch]);\n\n  return (\n    <div className=\"app\">\n      <Sidebar />\n      <Body />\n    </div>\n  );\n};\n\nexport default withRouter(Dashboard);\n","/* eslint-disable react/prop-types */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst LoginForm = ({ onSubmit, errors, register, handleSubmit }) => (\n  <div className=\"form\">\n    <label htmlFor=\"register-form\">\n      <h4>Log in</h4>\n    </label>\n    <div className=\"register-form\">\n      <form id=\"login\" onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"form-group\">\n          <label htmlFor=\"username\">Username</label>\n          <input\n            defaultValue=\"\"\n            name=\"username\"\n            type=\"text\"\n            {...register('username')}\n            className={`form-control ${errors.username ? 'is-invalid' : ''}`}\n          />\n          <div className=\"invalid-feedback\">{errors.username?.message}</div>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Password</label>\n          <input\n            defaultValue=\"\"\n            name=\"password\"\n            type=\"password\"\n            {...register('password')}\n            className={`form-control ${errors.password ? 'is-invalid' : ''}`}\n          />\n          <div className=\"invalid-feedback\">{errors.password?.message}</div>\n        </div>\n\n        <div className=\"form-group\">\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Submit\n          </button>\n\n          <Link to=\"/register\">\n            <button type=\"button\" className=\"btn btn-secondary float-right\">\n              Register\n            </button>\n          </Link>\n        </div>\n      </form>\n    </div>\n  </div>\n);\n\nexport default LoginForm;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst RegisterButton = () => (\n  <Link to=\"/register\">\n    <div className=\"form-group\">\n      <button type=\"button\" className=\"btn btn-primary\">\n        Register\n      </button>\n    </div>\n  </Link>\n);\n\nexport default RegisterButton;\n","import React, { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport LoginForm from '../components/login/LoginForm';\nimport allActions from '../redux/actions';\nimport HomeButton from '../components/HomeButton';\nimport RegisterButton from '../components/register/RegisterButton';\n\nconst Login = () => {\n  const { message } = useSelector((state) => state.message);\n  const { isAuth } = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required('Username is required'),\n\n    password: Yup.string().required('Password is required'),\n  });\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(validationSchema),\n  });\n\n  const onSubmit = (data) => {\n    dispatch(allActions.auth.loginAction(data)).then((res) => {\n      dispatch(allActions.user.userDetails(res.data));\n      console.log(\n        `%c Submission response: %c${JSON.stringify(res.data)} `,\n        'font-size: 12px; color: black; background: lightGrey;',\n        'font-size: 12px; color: DarkGreen; background: lightGrey;'\n      );\n    });\n  };\n\n  useEffect(() => {\n    if (isAuth) {\n      history.push('/dashboard');\n    }\n  }, [isAuth, history]);\n\n  return (\n    <>\n      <div className=\"button-wrapper\">\n        <HomeButton />\n        <RegisterButton />\n      </div>\n      <LoginForm\n        message={message}\n        onSubmit={onSubmit}\n        errors={errors}\n        register={register}\n        handleSubmit={handleSubmit}\n        reset={reset}\n      />\n    </>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport LogoutButton from '../components/LogoutButton';\nimport LoginButton from '../components/login/LoginButton';\nimport RegisterButton from '../components/register/RegisterButton';\n\nconst Home = () => {\n  const { isAuth } = useSelector((state) => state.auth);\n\n  return (\n    <>\n      <div className=\"header\" style={{ left: '0', right: '0' }}>\n        <div>\n          <h1 className=\"text-center\">Home</h1>\n          <div className=\"button-wrapper\">\n            {isAuth ? (\n              <LogoutButton />\n            ) : (\n              <>\n                <LoginButton />\n                <RegisterButton />\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n      <div\n        className=\"content\"\n        style={{\n          left: '0',\n          right: '0',\n          marginLeft: '1rem',\n          marginRight: '1rem',\n        }}\n      />\n      <div className=\"footer\" style={{ left: '0', right: '0' }} />\n    </>\n  );\n};\n\nexport default Home;\n","import '../Styles.css';\nimport React from 'react';\nimport { Route, Router, Switch } from 'react-router-dom';\nimport history from '../helpers/history';\nimport ProtectedRoute from './ProtectedRoute';\nimport Register from '../containers/Register';\nimport Dashboard from '../containers/Dashboard';\nimport Login from '../containers/Login';\nimport Home from '../containers/Home';\n\n// const Home = lazy(() => import('../containers/Home'));\n// const Login = lazy(() => import('../containers/Login'));\n// const PrivateRoute = lazy(() => import('./PrivateRoute'));\n// const Dashboard = lazy(() => import('../containers/Dashboard'));\n\nconst Routes = () => (\n  // const location = useLocation();\n  <Router history={history}>\n    <Switch>\n      <Route exact path={['/', '/home']} component={Home} />\n      <Route exact path=\"/login\" component={Login} />\n      <Route exact path=\"/register\" component={Register} />\n      <ProtectedRoute exact path=\"/dashboard\" component={Dashboard} />\n    </Switch>\n  </Router>\n);\n// Routes.propTypes = {\n//   isAuth: PropTypes.bool.isRequired,\n// };\n\nexport default Routes;\n","import './Styles.css';\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport history from './helpers/history';\nimport Routes from './routes/Routes';\nimport { CLEAR_MESSAGE } from './redux/actions/types';\n\nconst App = () => {\n  // console.log(\n  //   `%c Local Storage: %c ${JSON.stringify(localStorage)} `,\n  //   'font-size: 12px; color: black; background: lightGrey;',\n  //   'font-size: 12px; color: DarkGreen; background: lightGrey;'\n  // );\n  const { isAuth } = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // eslint-disable-next-line no-unused-vars\n    history.listen((location) => {\n      // clear message when changing location\n      dispatch({ type: CLEAR_MESSAGE });\n    });\n  }, [dispatch]);\n\n  return (\n    <div className=\"app\">\n      <Routes isAuth={isAuth} />\n    </div>\n  );\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}