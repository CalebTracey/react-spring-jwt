{"version":3,"sources":["redux/actions/message.js","redux/actions/videos.js","service/video-service.js","redux/actions/index.js","service/token-service.js","redux/actions/types.js","service/auth-service.js","redux/actions/auth.js","components/LogoutButton.js","service/user-service.js","service/api.js","service/setupInterceptors.js","redux/reducers/auth.js","redux/reducers/message.js","redux/reducers/videos.js","redux/reducers/index.js","redux/store.js","helpers/history.js","components/layout/sidebar/SidebarHome.js","components/layout/sidebar/SidebarContent.js","components/layout/Sidebar.js","components/content/Content.js","components/layout/Footer.js","components/UserInfoHeader.js","components/layout/Header.js","components/layout/Body.js","common/EventBus.js","containers/Dashboard.js","routes/Routes.js","App.js","index.js"],"names":["messages","setMessage","message","type","SET_MESSAGE","payload","clearMessage","CLEAR_MESSAGE","getClassifications","instance","get","videos","categories","data","SET_CATEGORIES","classifications","dispatch","then","response","SET_CLASSIFICATIONS","allActions","auth","TokenService","getLocalRefreshToken","user","JSON","parse","localStorage","getItem","refreshToken","getLocalAccessToken","accessToken","updateLocalAccessToken","token","setItem","stringify","getUser","setUser","removeUser","removeItem","REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","REFRESH_TOKEN","AuthService","registerService","api","post","loginService","logoutService","login","credentials","error","toString","Promise","reject","register","logout","Logout","useDispatch","className","style","marginLeft","onClick","UserService","getPublicContent","getAdminContent","axios","create","baseURL","headers","CancelToken","isCancel","setup","store","axiosInstance","interceptors","request","use","config","Authorization","res","a","err","originalConfig","url","status","retry","rs","initialState","isAuth","state","action","console","log","combineReducers","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","history","createBrowserHistory","SidebarHome","to","color","backgroundColor","borderRight","SidebarList","lazy","SidebarContent","useSelector","length","fallback","Sidebar","Content","Footer","UserInfoHeader","username","Header","Body","eventBus","on","event","callback","document","addEventListener","e","detail","dispatchEvent","CustomEvent","remove","removeEventListener","withRouter","useState","content","setContent","useEffect","EventBus","Home","Login","ProtectedRoute","Register","Routes","exact","path","component","Dashboard","App","currentUser","logOut","useCallback","listen","location","setupInterceptors","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.64eb49ad.chunk.js","sourcesContent":["import { SET_MESSAGE, CLEAR_MESSAGE } from './types';\n\nconst setMessage = (message) => ({\n  type: SET_MESSAGE,\n  payload: message,\n});\n\nconst clearMessage = () => ({\n  type: CLEAR_MESSAGE,\n});\n\nconst messages = {\n  setMessage,\n  clearMessage,\n};\n\nexport default messages;\n","import { SET_CATEGORIES, SET_CLASSIFICATIONS } from './types';\nimport VideoService from '../../service/video-service';\n\nconst { getClassifications } = VideoService;\n\nconst classifications = () => (dispatch) =>\n  getClassifications().then((response) => {\n    dispatch({\n      type: SET_CLASSIFICATIONS,\n      payload: response,\n    });\n  });\n\nconst categories = (data) => ({\n  type: SET_CATEGORIES,\n  payload: data,\n});\n\nconst videos = { categories, classifications };\n\nexport default videos;\n","import instance from './api';\n\nconst API_URL = 'http://localhost:8080/api';\n\nconst getClassifications = () =>\n  instance.get(`${API_URL}/video/classifications`);\n\nconst VideoService = { getClassifications };\n\nexport default VideoService;\n","import auth from './auth';\nimport message from './message';\nimport videos from './videos';\n\nconst allActions = {\n  auth,\n  message,\n  videos,\n};\n\nexport default allActions;\n","const getLocalRefreshToken = () => {\n  const user = JSON.parse(localStorage.getItem('user'));\n  return user?.refreshToken;\n};\n\nconst getLocalAccessToken = () => {\n  const user = JSON.parse(localStorage.getItem('user'));\n  return user?.accessToken;\n};\n\nconst updateLocalAccessToken = (token) => {\n  const user = JSON.parse(localStorage.getItem('user'));\n  user.accessToken = token;\n  localStorage.setItem('user', JSON.stringify(user));\n};\n\nconst getUser = () => JSON.parse(localStorage.getItem('user'));\n\nconst setUser = (user) => {\n  localStorage.setItem('user', JSON.stringify(user));\n};\n\nconst removeUser = () => {\n  localStorage.removeItem('user');\n};\n\nconst TokenService = {\n  getLocalRefreshToken,\n  getLocalAccessToken,\n  updateLocalAccessToken,\n  getUser,\n  setUser,\n  removeUser,\n};\n\nexport default TokenService;\n","export const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT = 'LOGOUT';\nexport const REDIRECT = 'REDIRECT';\nexport const SET_MESSAGE = 'SET_MESSAGE';\nexport const CLEAR_MESSAGE = 'CLEAR_MESSAGE';\nexport const SET_USER_DETAILS = 'SET_USER_DETAILS';\nexport const SET_CATEGORIES = 'SET_CATEGORIES';\nexport const SET_CLASSIFICATIONS = 'SET_CLASSIFICATIONS';\nexport const REFRESH_TOKEN = 'REFRESH_TOKEN';\n","import api from './api';\nimport TokenService from './token-service';\n\nconst { removeUser } = TokenService;\n\nconst registerService = (data) => api.post(`/auth/sign-up`, data);\n\nconst loginService = (data) =>\n  api.post(`/auth/sign-in`, data).then((response) => {\n    if (response.data) {\n      localStorage.setItem('user', JSON.stringify(response.data));\n    }\n    return response.data;\n  });\n\nconst logoutService = () => {\n  removeUser();\n};\n\nconst AuthService = {\n  registerService,\n  loginService,\n  logoutService,\n};\n\nexport default AuthService;\n","import AuthService from '../../service/auth-service';\n\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  SET_MESSAGE,\n  REFRESH_TOKEN,\n} from './types';\n\nconst { registerService, loginService, logoutService } = AuthService;\n\nconst login = (credentials) => (dispatch) =>\n  loginService(credentials).then(\n    (data) => {\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: { user: data },\n      });\n    },\n    (error) => {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n\n      dispatch({\n        type: LOGIN_FAIL,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      });\n\n      return Promise.reject(error);\n    }\n  );\n\nconst register = (data) => (dispatch) =>\n  registerService(data).then(\n    (response) => {\n      dispatch({\n        type: REGISTER_SUCCESS,\n      });\n      dispatch({\n        type: SET_MESSAGE,\n        payload: response.data.message,\n      });\n    },\n    (error) => {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n      dispatch({\n        type: REGISTER_FAIL,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      });\n\n      return Promise.reject();\n    }\n  );\n\nconst logout = () => (dispatch) => {\n  logoutService();\n  dispatch({\n    type: LOGOUT,\n  });\n};\n\nconst refreshToken = (accessToken) => (dispatch) => {\n  dispatch({\n    type: REFRESH_TOKEN,\n    payload: accessToken,\n  });\n};\n\nconst auth = {\n  refreshToken,\n  login,\n  register,\n  logout,\n};\n\nexport default auth;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport allActions from '../redux/actions';\n\nconst Logout = () => {\n  const dispatch = useDispatch();\n  return (\n    <div className=\"form-group\" style={{ marginLeft: '1rem' }}>\n      <button\n        type=\"button\"\n        className=\"btn btn-outline-primary\"\n        onClick={() => dispatch(allActions.auth.logout())}\n      >\n        Logout\n      </button>\n    </div>\n  );\n};\n\nexport default Logout;\n","import api from './api';\n\nconst getPublicContent = () => api.get(`/all`);\n\nconst getClassifications = () => api.get('/classifications');\n\nconst getAdminContent = () => api.get(`/admin`);\n\nconst UserService = {\n  getPublicContent,\n  getClassifications,\n  getAdminContent,\n};\nexport default UserService;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'http://localhost:8080/api',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\ninstance.CancelToken = axios.CancelToken;\ninstance.isCancel = axios.isCancel;\n\nexport default instance;\n","/* eslint-disable no-param-reassign */\nimport axiosInstance from './api';\nimport TokenService from './token-service';\nimport allActions from '../redux/actions';\n\nconst { getLocalAccessToken, getLocalRefreshToken, updateLocalAccessToken } =\n  TokenService;\n\nconst setup = (store) => {\n  axiosInstance.interceptors.request.use(\n    (config) => {\n      const token = getLocalAccessToken();\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      return config;\n    },\n    (error) => {\n      axiosInstance.isCancel(true);\n      return Promise.reject(error);\n    }\n  );\n  const { dispatch } = store;\n\n  axiosInstance.interceptors.response.use(\n    (res) => res,\n    async (err) => {\n      const originalConfig = err.config;\n\n      if (originalConfig.url !== '/auth/sign-in' && err.response) {\n        // Access Token was expired\n        if (err.response.status === 401 && !originalConfig.retry) {\n          originalConfig.retry = true;\n          try {\n            const rs = await axiosInstance.post('/auth/token/refresh', {\n              refreshToken: getLocalRefreshToken(),\n            });\n            const { accessToken } = rs.data;\n            dispatch(allActions.auth.refreshToken(accessToken));\n            updateLocalAccessToken(accessToken);\n            return axiosInstance(originalConfig);\n          } catch (error) {\n            return Promise.reject(error);\n          }\n        }\n      }\n      return Promise.reject(err);\n    }\n  );\n};\n\nexport default setup;\n","import {\n  REFRESH_TOKEN,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n} from '../actions/types';\n\nconst user = JSON.parse(localStorage.getItem('user'));\n\nconst initialState = user\n  ? { isAuth: true, user }\n  : { isAuth: false, user: null };\n\nconst auth = (state = initialState, action) => {\n  console.log(\n    `%c Current action: %c${JSON.stringify(action.type)} `,\n    'font-size: 12px; color: black; background: lightGrey;',\n    'font-size: 12px; color: DarkGreen; background: lightGrey;'\n  );\n  const { type, payload } = action;\n  switch (type) {\n    case REFRESH_TOKEN:\n      return {\n        ...state,\n        user: { ...user, accessToken: payload },\n      };\n    case REGISTER_SUCCESS:\n      return {\n        ...state,\n        isAuth: false,\n      };\n    case REGISTER_FAIL:\n      return {\n        ...state,\n        isAuth: false,\n      };\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        isAuth: true,\n        user: payload,\n      };\n    case LOGIN_FAIL:\n      return {\n        ...state,\n        isAuth: false,\n        user: null,\n      };\n    case LOGOUT:\n      return {\n        ...state,\n        isAuth: false,\n        user: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default auth;\n","import { SET_MESSAGE, CLEAR_MESSAGE } from '../actions/types';\n\nconst initialState = {};\n\nconst message = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_MESSAGE:\n      return { message: payload };\n\n    case CLEAR_MESSAGE:\n      return { message: '' };\n\n    default:\n      return state;\n  }\n};\n\nexport default message;\n","import { SET_CATEGORIES, SET_CLASSIFICATIONS } from '../actions/types';\n\nconst initialState = {\n  categories: [],\n  classifications: [],\n};\n\nconst user = (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case SET_CATEGORIES:\n      return {\n        ...state,\n        categories: payload.data,\n      };\n    case SET_CLASSIFICATIONS:\n      return {\n        ...state,\n        classifications: payload.data,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default user;\n","import { combineReducers } from 'redux';\nimport auth from './auth';\nimport message from './message';\nimport videos from './videos';\n\nexport default combineReducers({\n  auth,\n  message,\n  videos,\n});\n","/* eslint-disable import/no-extraneous-dependencies */\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport default store;\n","/* eslint-disable import/no-extraneous-dependencies */\nimport { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default history;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst SidebarHome = () => (\n  <Link to=\"/home\">\n    <div\n      className=\"list-item\"\n      style={{\n        color: 'black',\n        backgroundColor: '#f8f9fa',\n        borderRight: 'none',\n      }}\n    >\n      Home\n    </div>\n  </Link>\n);\n\nexport default SidebarHome;\n","import React, { Suspense, lazy } from 'react';\nimport { useSelector } from 'react-redux';\nimport SidebarHome from './SidebarHome';\n\nconst SidebarList = lazy(() => import('./SidebarList'));\n\nconst SidebarContent = () => {\n  const { classifications } = useSelector((state) => state.videos);\n\n  return !classifications || classifications.length === 0 ? (\n    'Loading...'\n  ) : (\n    <div className=\"sidebar-content\">\n      <SidebarHome />\n      <Suspense fallback=\"Loading...\">\n        <SidebarList classifications={classifications} />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default SidebarContent;\n","import React from 'react';\nimport SidebarContent from './sidebar/SidebarContent';\n\nconst Sidebar = () => (\n  <div className=\"sidebar\">\n    <SidebarContent />\n  </div>\n);\n\nexport default Sidebar;\n","import React from 'react';\n\nconst Content = () => <div />;\nexport default Content;\n","import React from 'react';\n\nconst Footer = () => <div className=\"footer\">caleb tracey 2021</div>;\n\nexport default Footer;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { useSelector } from 'react-redux';\n\nconst UserInfoHeader = () => {\n  const { user } = useSelector((state) => state.auth);\n\n  return <div className=\"form-group\">{user.username}</div>;\n};\n\nexport default UserInfoHeader;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport Logout from '../LogoutButton';\nimport UserInfoHeader from '../UserInfoHeader';\n\nconst Header = () => (\n  <div className=\"header\">\n    <div className=\"button-wrapper\">\n      <Logout />\n      <UserInfoHeader />\n    </div>\n  </div>\n);\n\nexport default Header;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport Content from '../content/Content';\nimport Footer from './Footer';\nimport Header from './Header';\n\nconst Body = () => (\n  <div className=\"body\">\n    <Header />\n    <Content />\n    <Footer />\n  </div>\n);\n\nexport default Body;\n","const eventBus = {\n  on(event, callback) {\n    document.addEventListener(event, (e) => callback(e.detail));\n  },\n  dispatch(event, data) {\n    document.dispatchEvent(new CustomEvent(event, { detail: data }));\n  },\n  remove(event, callback) {\n    document.removeEventListener(event, callback);\n  },\n};\n\nexport default eventBus;\n","import React, { useState, useEffect } from 'react';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Sidebar from '../components/layout/Sidebar';\nimport Body from '../components/layout/Body';\nimport UserService from '../service/user-service';\nimport EventBus from '../common/EventBus';\nimport allActions from '../redux/actions';\n\nconst { getClassifications } = UserService;\n\nconst Dashboard = () => {\n  const [content, setContent] = useState({});\n  const { user } = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n\n  if (!user) {\n    <Redirect to=\"login\" />;\n  }\n\n  useEffect(() => {\n    getClassifications().then(\n      (response) => {\n        dispatch(allActions.videos.classifications(response.data));\n        setContent(response.data);\n      },\n      (error) => {\n        const err =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString();\n\n        setContent(err);\n\n        if (error.response && error.response.status === 401) {\n          EventBus.dispatch('logout');\n        }\n      }\n    );\n  }, [dispatch]);\n\n  return (\n    <div className=\"app\">\n      <Sidebar content={content} />\n      <Body />\n    </div>\n  );\n};\nexport default withRouter(Dashboard);\n","import React, { lazy } from 'react';\nimport { Route, Router, Switch } from 'react-router-dom';\nimport history from '../helpers/history';\nimport Dashboard from '../containers/Dashboard';\n\nconst Home = lazy(() => import('../containers/Home'));\nconst Login = lazy(() => import('../containers/Login'));\nconst ProtectedRoute = lazy(() => import('./ProtectedRoute'));\nconst Register = lazy(() => import('../containers/Register'));\n\nconst Routes = () => (\n  <Router history={history}>\n    <Switch>\n      <Route exact path={['/', '/home']} component={Home} />\n      <Route exact path=\"/login\" component={Login} />\n      <Route exact path=\"/register\" component={Register} />\n      <ProtectedRoute exact path=\"/dashboard\" component={Dashboard} />\n    </Switch>\n  </Router>\n);\n\nexport default Routes;\n","import './Styles.css';\nimport React, { Suspense, useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport history from './helpers/history';\nimport Routes from './routes/Routes';\nimport { CLEAR_MESSAGE } from './redux/actions/types';\nimport EventBus from './common/EventBus';\nimport logout from './redux/actions/auth';\n\nconst App = () => {\n  const { user: currentUser } = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n\n  const logOut = useCallback(() => {\n    dispatch(logout());\n  }, [dispatch]);\n\n  useEffect(() => {\n    // eslint-disable-next-line no-unused-vars\n    history.listen((location) => {\n      // clear message when changing location\n      dispatch({ type: CLEAR_MESSAGE });\n    });\n  }, [dispatch]);\n\n  useEffect(() => {\n    EventBus.on('logout', () => {\n      logOut();\n    });\n    return () => {\n      EventBus.remove('logout');\n    };\n  }, [currentUser, dispatch, logOut]);\n\n  return (\n    <Suspense fallback=\"Loading...\">\n      <div className=\"app\">\n        <Routes />\n      </div>\n    </Suspense>\n  );\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport setupInterceptors from './service/setupInterceptors';\nimport store from './redux/store';\nimport './index.css';\nimport App from './App';\n\nsetupInterceptors(store);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}